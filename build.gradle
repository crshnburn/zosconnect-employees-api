/*
Copyright 2021 IBM Corporation

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
plugins {
    id 'org.openapi.generator' version '5.3.0'
    id 'war'
}

repositories {
    mavenCentral()
}

dependencies {
    providedCompile (
        'javax.ws.rs:javax.ws.rs-api:2.0',
        'javax.enterprise:cdi-api:2.0',
        'javax.validation:validation-api:2.0.1.Final',
        'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.11.1',
        'javax.annotation:javax.annotation-api:1.3.2',
        'javax.servlet:servlet-api:2.5'
    )

    // depend on just the SPI project classes, not all of engine
    providedCompile fileTree('./spi')
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
    sourceSets {
        main {
            java {
                srcDirs = ['src/gen/java']
            }
        }
    }
}

compileJava.dependsOn tasks.openApiGenerate

openApiGenerate {
    delete "${projectDir}/src/gen/java/com/ibm/zosconnect/api/RestApplication.java"
    generatorName = "jaxrs-spec"
    inputSpec = "${projectDir}/src/main/api/openapi.yaml"
    outputDir = "${projectDir}"
    apiPackage = "com.ibm.zosconnect.api"
    invokerPackage = "com.ibm.zosconnect.api"
    modelPackage = "com.ibm.zosconnect.api.model"
    library = "openliberty"
    additionalProperties = [
        jackson: "true",
        dateLibrary: "java8"
    ]
    configOptions = [
        apiType: "PROVIDER",
        generatePom: "false"
    ]
    // IBM internal build uses common project for templates to avoid duplication. Clients will use templates in the project as commented below.
    templateDir = "${projectDir}/zosConnectJaxRSTemplate"
    
}

war {
    // **** Update WAR name if required ****
    archiveName = 'api.war'
    archiveVersion = ''
    // Copy all zos assets
    webInf {
        from('src/main/zosAssets')
        into('src/main/zosAssets')
    }
    // Copy all operation files
    webInf {
        from('src/main/operations')
        into('src/main/operations')
    }
    webXml = file('src/main/web.xml')
}

// Extend the gradle clean to include generated files that are gitignored
clean.doFirst {
    println "Deleting generated Java in ${projectDir}/src/gen"
    delete "${projectDir}/src/gen"
    println "Deleting generated config in ${projectDir}/src/main/webapp"
    delete "${projectDir}/src/main/webapp"
}